{
	"info": {
		"_postman_id": "7bb7c909-a8d6-4bae-ac45-0f754795fb57",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21930313"
	},
	"item": [
		{
			"name": "Facts",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//  const jsonData = pm.response.json();",
									"",
									"//   pm.test(\"Test data type of the response\", () => {",
									"//   pm.expect(jsonData.fact).to.be.a(\"string\");",
									"//   pm.expect(jsonData.length).to.be.a(\"number\");",
									"",
									"//  });",
									"",
									" pm.test(\"Check length and test value type\", function () { ",
									"    var jsonData = pm.response.json(); ",
									"    pm.expect(jsonData.length).to.be.a(\"number\"); ",
									"    pm.expect(jsonData.fact).to.be.a(\"string\"); ",
									"}); ",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"fact\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"length\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}fact",
							"host": [
								"{{url}}fact"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Test data type of the response\", () => {",
									"  pm.expect(jsonData.current_page).to.be.a(\"number\");",
									"  pm.expect(jsonData.data).to.be.an(\"array\");",
									"",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unlike dogs, cats do not have a sweet tooth. Scientists believe this is due to a mutation in a key taste receptor.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}facts",
							"host": [
								"{{url}}facts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Breeds",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Test data type of the response\", () => {",
									"  pm.expect(jsonData.current_page).to.be.a(\"number\");",
									"  pm.expect(jsonData.data).to.be.an(\"array\");",
									"",
									"});",
									"",
									"pm.test(\"Test if array not empty\", () => {",
									"    //errors array is empty",
									"  pm.expect(jsonData.data).to.be.not.empty;",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"breed\");",
									"    pm.expect(pm.response.text()).to.include(\"country\");",
									"    pm.expect(pm.response.text()).to.include(\"origin\");",
									"    pm.expect(pm.response.text()).to.include(\"coat\");",
									"    pm.expect(pm.response.text()).to.include(\"pattern\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}breeds",
							"host": [
								"{{url}}breeds"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://catfact.ninja/",
			"type": "string"
		}
	]
}